#summary bootstrap.sh - Creating a new Typo3 installation from scratch.

= Introduction =

*Note*: `bootstrap.sh` is currently the focus of development. Please check the [http://code.google.com/p/typo3scripts/source/browse/branches/dev/bootstrap.sh development branch] for the latest version. This documentation may refer to features not present in the release version of this script.

The main purpose of `bootstrap.sh` is to ease deployment of a new Typo3 installation. At the time of writing, the easing is limited mostly to downloading the Typo3 package for you.

= Arguments =
{{{
$ ./bootstrap.sh --help
  Usage: ./bootstrap.sh [OPTIONS --version=<VERSION>]|<VERSION>

  Core:
  --help              Display this help and exit.
  --update            Tries to update the script to the latest version.
  --base=PATH         The name of the base path where Typo3 should be
                      installed. If no base is supplied, "typo3" is used.

  Options:
  --version=VERSION   The version to install.
  --skip-db-config    Skips writing the database configuration to localconf.php
  --skip-gm-detect    Skips the detection of GraphicsMagick.
  --skip-unzip-detect Skips the detection of the unzip utility.
  --skip-rights       Skip trying to fix access rights.
  --owner=OWNER       The name of the user that owns the installation.
  --httpd-group=GROUP The user group the local HTTP daemon is running as.

  Database:
  --hostname=HOST     The name of the host where the Typo3 database is running.
  --username=USER     The username to use when connecting to the Typo3
                      database.
  --password=PASSWORD The password to use when connecting to the Typo3
                      database.
  --database=DB       The name of the database in which Typo3 is stored.

  Note: When using an external configuration file, it is sufficient to supply
        just the target version as a parameter.
        When supplying other any command line argument, supply the target
        version through the --version command line parameter.
}}}

== Overview ==

Please note, all scripts in the typo3scripts suite always try to _source_ these parameters from an external configuration file named like the script itself with a `.conf` suffix rather than the `.sh` suffix.
So for `bootstrap.sh` the proper configuration file would be `bootstrap.conf`.
The correct contents for that configuration file can always be taken from the scripts themselves. It is contained between the `# Script Configuration start` and `# Script Configuration end` markers.

The script will always assume the default configuration at first (as defined in the script itself). It then overrides the default configuration with the one defined in aforementioned configuration file. It will then override those values with whatever had been passed on the command line.

*Hint*: It may be desirable to construct a configuration file for `bootstrap.sh` right away (even though you might only be using the script once) as other scripts in this suite can use the same configuration file.

== `--help` ==
Prints the output seen above, giving an overview of available command line parameters.

== `--update` ==
Invokes the self-updating mechanism in this script. This will download the latest release version (from SVN trunk) from `code.google.com` and replace your current script.

Please note, every time the script runs it will perform a quick check if a new version is available. If a new version is found online, the following message will be printed to the standard output:
{{{
NOTE: New version available!
}}}

== `--base` / `BASE` ==
By default, Typo3 installations will be created in a subfolder relative to the current working directory, named `typo3`. Use `--base` if the installation should be placed in a differently named subfolder.
{{{
$ ./bootstrap.sh --version=4.6.0 --base=myt3site
}}}

== `--version` / `VERSION` ==
The version of Typo3 that should be installed.

== `--skip-db-config` / `SKIP_DB_CONFIG` ==
Unless this parameter is given, `bootstrap.sh` will write database related parameters to the Typo3 `localconf.php`.

== `--skip-gm-detect` / `SKIP_GM_DETECT` ==
Unless this parameter is given, `bootstrap.sh` will look for a GraphicsMagick binary and, if found, write the location to the Typo3 `localconf.php` as `$TYPO3_CONF_VARS['GFX']['im_version_5']`.

== `--skip-unzip-detect` / `SKIP_UNZIP_DETECT` ==
Unless this parameter is given, `bootstrap.sh` will look for an `unzip` binary and, if found, write the location to the Typo3 `localconf.php` as `$TYPO3_CONF_VARS['BE']['unzip_path']`.

== `--skip-rights` / `SKIP_RIGHTS` ==
Unless this parameter is given, `bootstrap.sh` will try to adjust access rights for the new Typo3 installation. Please note that fixing the access rights requires the script to run with elevated privileges (`sudo`).

== `--owner` / `OWNER` ==
Defines the name of the system user that should own the new Typo3 installation.

== `--httpd-group` / `HTTPD_GROUP` ==
Defines the name of the system group the web server that serves the Typo3 installation is running as. This should be something like `www-data` (the default) or `apache`.

== `--hostname` / `HOST` ==
The name of the host where the database for Typo3 is running.

== `--username` / `USER` ==
The username for the connection to the database for the Typo3 installation.

== `--password` / `PASS` ==
The password for the connection to the database for the Typo3 installation. If not defined, `bootstrap.sh` will try to initialize the password to a random 16 character string.

== `--database` / `DB` ==
The name of the database for the Typo3 installation. This parameter is currently unused.

= Examples =

== Creating a fresh installation ==
{{{
/var/www$ mkdir t3site
/var/www$ cd t3site/
/var/www/t3site$ wget http://typo3scripts.googlecode.com/svn/trunk/bootstrap.sh
/var/www/t3site$ chmod 700 bootstrap.sh
/var/www/t3site$ sudo ./bootstrap.sh 4.6.1
Looking for Typo3 package at blankpackage-4.6.1.tar.gz...NOT found!
Downloading http://prdownloads.sourceforge.net/typo3/blankpackage-4.6.1.tar.gz...Done.
Extracting Typo3 package blankpackage-4.6.1.tar.gz...Done.
Moving Typo3 package to typo3...Done.
Generating localconf.php...Done.
Adjusting access permissions for Typo3 installation...Done.
Enabling install tool...Done.
}}}
Creating a new installation is straight-forward. You simply retrieve the script, make it executable and pass the Typo3 version you want to use as an argument.

By default, the installation will be created in a subfolder called `typo3`. This is due to the way the other scripts interact with a Typo3 installation. You can change the name of that subfolder with the `--base` command line parameter.

Additionally, `bootstrap.sh` accepts parameters related to the database Typo3 should use. `bootstrap.sh` accepts these parameters for interoperability reasons with other scripts in this suite (which require a database connection). This allows you to construct a single configuration which all scripts can make use of.
These parameters will be written to the Typo3 `localconf.php` file (unless disabled via `--skip-db-config`).